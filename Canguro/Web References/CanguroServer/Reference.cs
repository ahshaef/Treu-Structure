//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.235.
// 
#pragma warning disable 1591

namespace Canguro.CanguroServer {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AnalysisSoap", Namespace="http://treusoft.com/")]
    public partial class Analysis : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AnalyzeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportToS2KOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSellFromSerialOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Analysis() {
            this.Url = global::Canguro.Properties.Settings.Default.Canguro_CanguroServer_Analysis;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AnalyzeCompletedEventHandler AnalyzeCompleted;
        
        /// <remarks/>
        public event ExportToS2KCompletedEventHandler ExportToS2KCompleted;
        
        /// <remarks/>
        public event GetResultsCompletedEventHandler GetResultsCompleted;
        
        /// <remarks/>
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        /// <remarks/>
        public event QuoteCompletedEventHandler QuoteCompleted;
        
        /// <remarks/>
        public event RegisterUserCompletedEventHandler RegisterUserCompleted;
        
        /// <remarks/>
        public event AddSellFromSerialCompletedEventHandler AddSellFromSerialCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://treusoft.com/Analyze", RequestNamespace="http://treusoft.com/", ResponseNamespace="http://treusoft.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Analyze(string userName, string password, string host, string serial, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileArray, string analysisOptions, float modelSize, Quotation quotation) {
            object[] results = this.Invoke("Analyze", new object[] {
                        userName,
                        password,
                        host,
                        serial,
                        fileArray,
                        analysisOptions,
                        modelSize,
                        quotation});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AnalyzeAsync(string userName, string password, string host, string serial, byte[] fileArray, string analysisOptions, float modelSize, Quotation quotation) {
            this.AnalyzeAsync(userName, password, host, serial, fileArray, analysisOptions, modelSize, quotation, null);
        }
        
        /// <remarks/>
        public void AnalyzeAsync(string userName, string password, string host, string serial, byte[] fileArray, string analysisOptions, float modelSize, Quotation quotation, object userState) {
            if ((this.AnalyzeOperationCompleted == null)) {
                this.AnalyzeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnalyzeOperationCompleted);
            }
            this.InvokeAsync("Analyze", new object[] {
                        userName,
                        password,
                        host,
                        serial,
                        fileArray,
                        analysisOptions,
                        modelSize,
                        quotation}, this.AnalyzeOperationCompleted, userState);
        }
        
        private void OnAnalyzeOperationCompleted(object arg) {
            if ((this.AnalyzeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnalyzeCompleted(this, new AnalyzeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://treusoft.com/ExportToS2K", RequestNamespace="http://treusoft.com/", ResponseNamespace="http://treusoft.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AnalysisResult ExportToS2K(string userName, string password, string host, string serial, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileArray, string analysisOptions, float modelSize, Quotation quotation) {
            object[] results = this.Invoke("ExportToS2K", new object[] {
                        userName,
                        password,
                        host,
                        serial,
                        fileArray,
                        analysisOptions,
                        modelSize,
                        quotation});
            return ((AnalysisResult)(results[0]));
        }
        
        /// <remarks/>
        public void ExportToS2KAsync(string userName, string password, string host, string serial, byte[] fileArray, string analysisOptions, float modelSize, Quotation quotation) {
            this.ExportToS2KAsync(userName, password, host, serial, fileArray, analysisOptions, modelSize, quotation, null);
        }
        
        /// <remarks/>
        public void ExportToS2KAsync(string userName, string password, string host, string serial, byte[] fileArray, string analysisOptions, float modelSize, Quotation quotation, object userState) {
            if ((this.ExportToS2KOperationCompleted == null)) {
                this.ExportToS2KOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportToS2KOperationCompleted);
            }
            this.InvokeAsync("ExportToS2K", new object[] {
                        userName,
                        password,
                        host,
                        serial,
                        fileArray,
                        analysisOptions,
                        modelSize,
                        quotation}, this.ExportToS2KOperationCompleted, userState);
        }
        
        private void OnExportToS2KOperationCompleted(object arg) {
            if ((this.ExportToS2KCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportToS2KCompleted(this, new ExportToS2KCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://treusoft.com/GetResults", RequestNamespace="http://treusoft.com/", ResponseNamespace="http://treusoft.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AnalysisResult GetResults(string userName, string password, int analysisID) {
            object[] results = this.Invoke("GetResults", new object[] {
                        userName,
                        password,
                        analysisID});
            return ((AnalysisResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultsAsync(string userName, string password, int analysisID) {
            this.GetResultsAsync(userName, password, analysisID, null);
        }
        
        /// <remarks/>
        public void GetResultsAsync(string userName, string password, int analysisID, object userState) {
            if ((this.GetResultsOperationCompleted == null)) {
                this.GetResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultsOperationCompleted);
            }
            this.InvokeAsync("GetResults", new object[] {
                        userName,
                        password,
                        analysisID}, this.GetResultsOperationCompleted, userState);
        }
        
        private void OnGetResultsOperationCompleted(object arg) {
            if ((this.GetResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultsCompleted(this, new GetResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://treusoft.com/Authenticate", RequestNamespace="http://treusoft.com/", ResponseNamespace="http://treusoft.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Authenticate(string username, string password) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string username, string password) {
            this.AuthenticateAsync(username, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string username, string password, object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOperationCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        username,
                        password}, this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateOperationCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://treusoft.com/Quote", RequestNamespace="http://treusoft.com/", ResponseNamespace="http://treusoft.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Quotation Quote(string username, string password, string host, string serial, string description) {
            object[] results = this.Invoke("Quote", new object[] {
                        username,
                        password,
                        host,
                        serial,
                        description});
            return ((Quotation)(results[0]));
        }
        
        /// <remarks/>
        public void QuoteAsync(string username, string password, string host, string serial, string description) {
            this.QuoteAsync(username, password, host, serial, description, null);
        }
        
        /// <remarks/>
        public void QuoteAsync(string username, string password, string host, string serial, string description, object userState) {
            if ((this.QuoteOperationCompleted == null)) {
                this.QuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuoteOperationCompleted);
            }
            this.InvokeAsync("Quote", new object[] {
                        username,
                        password,
                        host,
                        serial,
                        description}, this.QuoteOperationCompleted, userState);
        }
        
        private void OnQuoteOperationCompleted(object arg) {
            if ((this.QuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuoteCompleted(this, new QuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://treusoft.com/RegisterUser", RequestNamespace="http://treusoft.com/", ResponseNamespace="http://treusoft.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterUser(string username, string password, string name, string lastname) {
            object[] results = this.Invoke("RegisterUser", new object[] {
                        username,
                        password,
                        name,
                        lastname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string username, string password, string name, string lastname) {
            this.RegisterUserAsync(username, password, name, lastname, null);
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string username, string password, string name, string lastname, object userState) {
            if ((this.RegisterUserOperationCompleted == null)) {
                this.RegisterUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterUserOperationCompleted);
            }
            this.InvokeAsync("RegisterUser", new object[] {
                        username,
                        password,
                        name,
                        lastname}, this.RegisterUserOperationCompleted, userState);
        }
        
        private void OnRegisterUserOperationCompleted(object arg) {
            if ((this.RegisterUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterUserCompleted(this, new RegisterUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://treusoft.com/AddSellFromSerial", RequestNamespace="http://treusoft.com/", ResponseNamespace="http://treusoft.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddSellFromSerial(string username, string serial) {
            object[] results = this.Invoke("AddSellFromSerial", new object[] {
                        username,
                        serial});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSellFromSerialAsync(string username, string serial) {
            this.AddSellFromSerialAsync(username, serial, null);
        }
        
        /// <remarks/>
        public void AddSellFromSerialAsync(string username, string serial, object userState) {
            if ((this.AddSellFromSerialOperationCompleted == null)) {
                this.AddSellFromSerialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSellFromSerialOperationCompleted);
            }
            this.InvokeAsync("AddSellFromSerial", new object[] {
                        username,
                        serial}, this.AddSellFromSerialOperationCompleted, userState);
        }
        
        private void OnAddSellFromSerialOperationCompleted(object arg) {
            if ((this.AddSellFromSerialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSellFromSerialCompleted(this, new AddSellFromSerialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://treusoft.com/")]
    public partial class Quotation {
        
        private ModelInfo modelInfoField;
        
        private string userNameField;
        
        private string descriptionField;
        
        private float costField;
        
        private bool canAffordField;
        
        private System.DateTime timestampField;
        
        private Concept conceptField;
        
        private bool isProField;
        
        /// <remarks/>
        public ModelInfo ModelInfo {
            get {
                return this.modelInfoField;
            }
            set {
                this.modelInfoField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public float Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public bool CanAfford {
            get {
                return this.canAffordField;
            }
            set {
                this.canAffordField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public Concept Concept {
            get {
                return this.conceptField;
            }
            set {
                this.conceptField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPro {
            get {
                return this.isProField;
            }
            set {
                this.isProField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://treusoft.com/")]
    public partial class ModelInfo {
        
        private int jointsField;
        
        private int linesField;
        
        private int resultsCasesField;
        
        private string modelNameField;
        
        private bool designField;
        
        private int pDeltaField;
        
        /// <remarks/>
        public int Joints {
            get {
                return this.jointsField;
            }
            set {
                this.jointsField = value;
            }
        }
        
        /// <remarks/>
        public int Lines {
            get {
                return this.linesField;
            }
            set {
                this.linesField = value;
            }
        }
        
        /// <remarks/>
        public int ResultsCases {
            get {
                return this.resultsCasesField;
            }
            set {
                this.resultsCasesField = value;
            }
        }
        
        /// <remarks/>
        public string ModelName {
            get {
                return this.modelNameField;
            }
            set {
                this.modelNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Design {
            get {
                return this.designField;
            }
            set {
                this.designField = value;
            }
        }
        
        /// <remarks/>
        public int PDelta {
            get {
                return this.pDeltaField;
            }
            set {
                this.pDeltaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://treusoft.com/")]
    public partial class ManifestItem {
        
        private string descriptionField;
        
        private string filePathField;
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string FilePath {
            get {
                return this.filePathField;
            }
            set {
                this.filePathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://treusoft.com/")]
    public partial class AnalysisManifest {
        
        private byte[] decryptionKeyField;
        
        private byte[] decryptionVectorField;
        
        private ManifestItem summaryField;
        
        private ManifestItem designField;
        
        private string modelField;
        
        private ManifestItem[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DecryptionKey {
            get {
                return this.decryptionKeyField;
            }
            set {
                this.decryptionKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DecryptionVector {
            get {
                return this.decryptionVectorField;
            }
            set {
                this.decryptionVectorField = value;
            }
        }
        
        /// <remarks/>
        public ManifestItem Summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        public ManifestItem Design {
            get {
                return this.designField;
            }
            set {
                this.designField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public ManifestItem[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://treusoft.com/")]
    public partial class AnalysisResult {
        
        private AnalysisManifest manifestField;
        
        private AnalysisState stateField;
        
        private int stateInfoField;
        
        /// <remarks/>
        public AnalysisManifest Manifest {
            get {
                return this.manifestField;
            }
            set {
                this.manifestField = value;
            }
        }
        
        /// <remarks/>
        public AnalysisState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public int StateInfo {
            get {
                return this.stateInfoField;
            }
            set {
                this.stateInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://treusoft.com/")]
    public enum AnalysisState {
        
        /// <remarks/>
        Queued,
        
        /// <remarks/>
        Analyzing,
        
        /// <remarks/>
        Finished,
        
        /// <remarks/>
        UnknownState,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://treusoft.com/")]
    public enum Concept {
        
        /// <remarks/>
        Analysis,
        
        /// <remarks/>
        Export,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AnalyzeCompletedEventHandler(object sender, AnalyzeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnalyzeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnalyzeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportToS2KCompletedEventHandler(object sender, ExportToS2KCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportToS2KCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportToS2KCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AnalysisResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AnalysisResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResultsCompletedEventHandler(object sender, GetResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AnalysisResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AnalysisResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QuoteCompletedEventHandler(object sender, QuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Quotation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Quotation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RegisterUserCompletedEventHandler(object sender, RegisterUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddSellFromSerialCompletedEventHandler(object sender, AddSellFromSerialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSellFromSerialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSellFromSerialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591