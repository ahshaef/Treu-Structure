using System;
using System.Collections.Generic;
using System.Text;
using System.Xml;
using System.Xml.Serialization;
using System.IO;

namespace Canguro.SectionCreator
{
    class Serializer
    {
        protected Model model;

        public Serializer(Model model)
        {
            this.model = model;
        }

        public void Serialize()
        {
            if (string.IsNullOrEmpty(model.CurrentPath))
                Serialize(Culture.Get("DefaultPath"));
        }

        public void Serialize(string path)
        {
            StreamWriter fWritter = File.CreateText(path);
            XmlWriterSettings settings = new XmlWriterSettings();

            settings.Indent = true;
            settings.IndentChars = "  ";
            settings.CheckCharacters = true;
            XmlWriter xml = XmlWriter.Create(fWritter, settings);
            try
            {
                xml.WriteStartDocument();
                xml.WriteComment("XML file generated by CanguroTeam");
                xml.WriteComment(DateTime.Now.ToString());

                xml.WriteStartElement("sections");

                WriteUnits(xml);
                WriteContours(xml);

                xml.WriteEndElement();
            }
            finally
            {
                xml.Close();
                fWritter.Close();
            }
        }

        protected void WriteUnits(XmlWriter xml)
        {
            xml.WriteStartElement("units");
            xml.WriteAttributeString("name", model.Unit.ToString());
            xml.WriteAttributeString("value", ((int)model.Unit).ToString());
            xml.WriteEndElement();
        }

        protected void WriteContours(XmlWriter xml)
        {
            xml.WriteStartElement("contours");
            
            foreach (Contour con in model.Contours)
            {
                xml.WriteStartElement("contour");
                xml.WriteAttributeString("name", con.Name);
                xml.WriteAttributeString("material", con.Material.ToString());
                xml.WriteAttributeString("color", con.Color.ToArgb().ToString());
                WritePoints(xml, con);
                xml.WriteEndElement();
            }

            xml.WriteEndElement();
        }

        protected void WritePoints(XmlWriter xml, Contour con)
        {
            xml.WriteStartElement("points");

            foreach (Point p in con.Points)
            {
                xml.WriteStartElement("point");
                xml.WriteAttributeString("x", p.X.ToString());
                xml.WriteAttributeString("y", p.Y.ToString());
                xml.WriteEndElement();
            }
            xml.WriteEndElement();
        }
    }
}
